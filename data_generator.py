import numpy as np
import random
import string
import vigenere
import substitution
import statistics
import transposition
import hill

config = {"vigenere": 0,
              "substitution": 1,
              "transposition": 2,
              "hill 2x2": 3

        }


reverse_config = {v:k for k,v in config.items()}

def generate_data(count, data_file, label_file):
    data = []
    labels = []


    pt = list('TOSHERLOCKHOLMESSHEISALWAYSTHEWOMANIHAVESELDOMHEARDHIMMENTIONHERUNDERANYOTHERNAMEINHISEYESSHEECLIPSESANDPREDOMINATESTHEWHOLEOFHERSEXITWASNOTTHATHEFELTANYEMOTIONAKINTOLOVEFORIRENEADLERALLEMOTIONSANDTHATONEPARTICULARLYWEREABHORRENTTOHISCOLDPRECISEBUTADMIRABLYBALANCEDMINDHEWASITAKEITTHEMOSTPERFECTREASONINGANDOBSERVINGMACHINETHATTHEWORLDHASSEENBUTASALOVERHEWOULDHAVEPLACEDHIMSELFINAFALSEPOSITIONHENEVERSPOKEOFTHESOFTERPASSIONSSAVEWITHAGIBEANDASNEERTHEYWEREADMIRABLETHINGSFORTHEOBSERVEREXCELLENTFORDRAWINGTHEVEILFROMMENSMOTIVESANDACTIONSBUTFORTHETRAINEDREASONERTOADMITSUCHINTRUSIONSINTOHISOWNDELICATEANDFINELYADJUSTEDTEMPERAMENTWASTOINTRODUCEADISTRACTINGFACTORWHICHMIGHTTHROWADOUBTUPONALLHISMENTALRESULTSGRITINASENSITIVEINSTRUMENTORACRACKINONEOFHISOWNHIGHPOWERLENSESWOULDNOTBEMOREDISTURBINGTHANASTRONGEMOTIONINANATURESUCHASHISANDYETTHEREWASBUTONEWOMANTOHIMANDTHATWOMANWASTHELATEIRENEADLEROFDUBIOUSANDQUESTIONABLEMEMORYIHADSEENLITTLEOFHOLMESLATELYMYMARRIAGEHADDRIFTEDUSAWAYFROMEACHOTHERMYOWNCOMPLETEHAPPINESSANDTHEHOMECENTREDINTERESTSWHICHRISEUPAROUNDTHEMANWHOFIRSTFINDSHIMSELFMASTEROFHISOWNESTABLISHMENTWERESUFFICIENTTOABSORBALLMYATTENTIONWHILEHOLMESWHOLOATHEDEVERYFORMOFSOCIETYWITHHISWHOLEBOHEMIANSOULREMAINEDINOURLODGINGSINBAKERSTREETBURIEDAMONGHISOLDBOOKSANDALTERNATINGFROMWEEKTOWEEKBETWEENCOCAINEANDAMBITIONTHEDROWSINESSOFTHEDRUGANDTHEFIERCEENERGYOFHISOWNKEENNATUREHEWASSTILLASEVERDEEPLYATTRACTEDBYTHESTUDYOFCRIMEANDOCCUPIEDHISIMMENSEFACULTIESANDEXTRAORDINARYPOWERSOFOBSERVATIONINFOLLOWINGOUTTHOSECLUESANDCLEARINGUPTHOSEMYSTERIESWHICHHADBEENABANDONEDASHOPELESSBYTHEOFFICIALPOLICEFROMTIMETOTIMEIHEARDSOMEVAGUEACCOUNTOFHISDOINGSOFHISSUMMONSTOODESSAINTHECASEOFTHETREPOFFMURDEROFHISCLEARINGUPOFTHESINGULARTRAGEDYOFTHEATKINSONBROTHERSATTRINCOMALEEANDFINALLYOFTHEMISSIONWHICHHEHADACCOMPLISHEDSODELICATELYANDSUCCESSFULLYFORTHEREIGNINGFAMILYOFHOLLANDBEYONDTHESESIGNSOFHISACTIVITYHOWEVERWHICHIMERELYSHAREDWITHALLTHEREADERSOFTHEDAILYPRESSIKNEWLITTLEOFMYFORMERFRIENDANDCOMPANIONONENIGHTITWASONTHETWENTIETHOFMARCHIWASRETURNINGFROMAJOURNEYTOAPATIENTFORIHADNOWRETURNEDTOCIVILPRACTICEWHENMYWAYLEDMETHROUGHBAKERSTREETASIPASSEDTHEWELLREMEMBEREDDOORWHICHMUSTALWAYSBEASSOCIATEDINMYMINDWITHMYWOOINGANDWITHTHEDARKINCIDENTSOFTHESTUDYINSCARLETIWASSEIZEDWITHAKEENDESIRETOSEEHOLMESAGAINANDTOKNOWHOWHEWASEMPLOYINGHISEXTRAORDINARYPOWERSHISROOMSWEREBRILLIANTLYLITANDEVENASILOOKEDUPISAWHISTALLSPAREFIGUREPASSTWICEINADARKSILHOUETTEAGAINSTTHEBLINDHEWASPACINGTHEROOMSWIFTLYEAGERLYWITHHISHEADSUNKUPONHISCHESTANDHISHANDSCLASPEDBEHINDHIMTOMEWHOKNEWHISEVERYMOODANDHABITHISATTITUDEANDMANNERTOLDTHEIROWNSTORYHEWASATWORKAGAINHEHADRISENOUTOFHISDRUGCREATEDDREAMSANDWASHOTUPONTHESCENTOFSOMENEWPROBLEMIRANGTHEBELLANDWASSHOWNUPTOTHECHAMBERWHICHHADFORMERLYBEENINPARTMYOWNHISMANNERWASNOTEFFUSIVEITSELDOMWASBUTHEWASGLADITHINKTOSEEMEWITHHARDLYAWORDSPOKENBUTWITHAKINDLYEYEHEWAVEDMETOANARMCHAIRTHREWACROSSHISCASEOFCIGARSANDINDICATEDASPIRITCASEANDAGASOGENEINTHECORNERTHENHESTOODBEFORETHEFIREANDLOOKEDMEOVERINHISSINGULARINTROSPECTIVEFASHION')
    print("Generating vigenere")
    for keyLen in range(2,15):
        for x in range(count):
            key = random.sample(list(string.ascii_uppercase), keyLen)
            data.append(vigenere.encrypt_vigenere(pt, key))
            labels.append(config["vigenere"])
    print("Generating substitution")

    key = list(string.ascii_uppercase)
    for x in range(count):
        random.shuffle(key)
        data.append(substitution.encrypt_substitution(pt, key))
        labels.append(config["substitution"])

    print("Generating transposition")
    for keyLen in range(2,15):
        key = list(range(keyLen))
        for x in range(count):
            random.shuffle(key)
            data.append(transposition.encrypt_transposition(pt, key))
            labels.append(config["transposition"])
              
    print("Generating 2x2 Hill")
    for x in range(count):
        key = random.sample(list(string.ascii_uppercase), 4)
        data.append(hill.encrypt_hill_2(pt, key))
        labels.append(config["hill 2x2"])
    
    print("Generating statistics")

    data = np.array(list(map(lambda x: [func(x) for func in statistics.stats_funcs], data)))
    labels = np.asarray(labels)

    data.dump(data_file)
    labels.dump(label_file)

    return
        


    
